version: '2.1'
services:
   database:
      image: postgres:latest
      ports:
         - "5432:5432"
      environment:
         POSTGRES_USER: "postgres"
         POSTGRES_PASSWORD: "postgres"
         POSTGRES_DB:       "ostock_dev"
      volumes:
         - ./sql:/docker-entrypoint-initdb.d
         - postgres_data:/var/lib/postgresql/data
      networks:
         backend:
            aliases:
               - "database"
      healthcheck:
         test: ["CMD-SHELL", "pg_isready -U postgres"]
         interval: 10s
         timeout: 5s
         retries: 5
   pgadmin:
      image: dpage/pgadmin4:latest
      ports: 
         - "80:80"
      environment: 
         PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
         PGADMIN_DEFAULT_PASSWORD: "admin"
      networks:
         backend:
            aliases: 
               - "pgadmin"
   zookeeper:
      image: zookeeper:latest
      ports:
         - 2181:2181
      networks:
         backend:
            aliases:
               - "zookeeper"
   kafkaserver:
      image: wurstmeister/kafka:latest
      ports:
         - 9092:9092
      environment:
         - KAFKA_ADVERTISED_HOST_NAME=kafka
         - KAFKA_ADVERTISED_PORT=9092
         - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
         - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
      volumes:
         - "/var/run/docker.sock:/var/run/docker.sock"
      depends_on:
         - zookeeper
      networks:
         backend:
            aliases:
               - "kafka"
   redisserver:
      image: redis:alpine
      ports:
         - 6379:6379
      networks:
         backend:
            aliases:
               - "redis"     
   elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
      ports:
         - 9300:9300
         - 9200:9200
      environment:
         - node.name=elasticsearch
         - discovery.type=single-node
         - cluster.name=docker-cluster
         - bootstrap.memory_lock=true
         - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ulimits:
         memlock:
            soft: -1
            hard: -1
      volumes:
         - esdata1:/usr/share/elasticsearch/data
      networks:
         backend:
            aliases:
               - "elasticsearch"
   kibana:
      image: docker.elastic.co/kibana/kibana:7.7.0
      ports:
         - 5601:5601
      environment:
         ELASTICSEARCH_URL: "http://elasticsearch:9300"
      networks:
         backend:
            aliases:
               - "kibana"
   logstash:
      image: docker.elastic.co/logstash/logstash:7.7.0
      command: logstash -f /usr/share/logstash/pipeline/logstash.conf
      volumes:
         - ./config:/usr/share/logstash/pipeline
      ports:
         - 5000:5000
      networks:
         backend:
            aliases:
               - "logstash"
   zipkin: 
      image: openzipkin/zipkin 
      container_name: zipkin
      depends_on: 
         - elasticsearch
      environment: 
         - STORAGE_TYPE=elasticsearch
         - "ES_HOSTS=elasticsearch:9300"
      ports:
         - "9411:9411"
      networks:
         backend:
            aliases:
               - "zipkin"               
   configserver:
      image: gaurav619/configserver
      ports:
         - "8071:8071"
      environment:
         ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
      networks:
         backend:
            aliases:
               - "configserver"
   eurekaserver:
      image: gaurav619/eurekaserver
      environment:
         EUREKA_INSTANCE_HOSTNAME: "eurekaserver"
         SPRING_PROFILES_ACTIVE: "dev"
         SPRING_CLOUD_CONFIG_URI: "http://configserver:8071"
         CONFIGSERVER_PORT:   "8071"
         APP_NAME: "Eureka Server"
      ports:
         - "8070:8070"
      depends_on:
         database:
            condition: service_healthy
         configserver:
            condition: service_started
      networks:
         backend:
            aliases:
               - "eurekaserver"
   gatewayserver:
      image: gaurav619/gatewayserver
      ports:
         - "8072:8072"
      environment:
         PROFILE: "default"
         SERVER_PORT: "8072"
         SPRING_CLOUD_CONFIG_URI: "http://configserver:8071"
         CONFIGSERVER_PORT: "8071"
         EUREKASERVER_PORT: "8070"
         LOGSTASH_PORT: "5000"
         APP_NAME: "Gateway Server"
      depends_on:
         database:
            condition: service_healthy
         configserver:
            condition: service_started
         eurekaserver: 
            condition: service_started
      networks:
         backend:
            aliases:
               - "gateway"
   authenticationservice:
      image: gaurav619/authentication-service
      environment:
         SPRING_PROFILES_ACTIVE: "dev"
         SPRING_CLOUD_CONFIG_URI: "http://configserver:8071"
         CONFIGSERVER_PORT:   "8071"
         ENCRYPT_KEY:       "IMSYMMETRIC"
         EUREKASERVER_PORT: "8070"
         APP_NAME: "Authentication Server"
      ports:
         - "8082:8082"
      depends_on:
         database:
            condition: service_healthy
         configserver:
            condition: service_started
         eurekaserver: 
            condition: service_started
      networks:
         backend:
            aliases:
               - "authenticationservice"
   licensingservice:
      image: gaurav619/licensing-service
      environment:
         SPRING_PROFILES_ACTIVE: "dev"
         SPRING_CLOUD_CONFIG_URI: "http://configserver:8071"
         CONFIGSERVER_PORT:   "8071"
         DATABASESERVER_PORT: "5432"
         ENCRYPT_KEY:       "IMSYMMETRIC"
         EUREKASERVER_PORT: "8070"
         AUTHENTICATIONSERVICE_PORT: "8082"
         LOGSTASH_PORT: "5000"
         APP_NAME: "Licensing Service"
      depends_on:
         database:
            condition: service_healthy
         configserver:
            condition: service_started
         eurekaserver: 
            condition: service_started
         authenticationservice:
            condition: service_started
         kafkaserver:
            condition: service_started
      ports:
         - "8080:8080"
      networks:
         - backend
   organizationservice:
      image: gaurav619/organization-service
      environment:
         SPRING_PROFILES_ACTIVE: "dev"
         SPRING_CLOUD_CONFIG_URI: "http://configserver:8071"
         CONFIGSERVER_PORT:   "8071"
         DATABASESERVER_PORT: "5432"
         ENCRYPT_KEY:       "IMSYMMETRIC"
         EUREKASERVER_PORT: "8070"
         AUTHENTICATIONSERVICE_PORT: "8082"
         LOGSTASH_PORT: "5000"
         APP_NAME: "Organization Service"
      depends_on:
         database:
            condition: service_healthy
         configserver:
            condition: service_started
         eurekaserver: 
            condition: service_started
         authenticationservice:
            condition: service_started
         kafkaserver:
            condition: service_started
      ports:
         - "8081:8081"
      networks:
         - backend        
networks:
   backend:
      driver: bridge
    
volumes:
   postgres_data:
   esdata1:
      driver: local
   